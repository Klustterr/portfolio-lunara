import React, { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Swiper, SwiperSlide } from "swiper/react";
import { Pagination, Autoplay } from "swiper/modules";
import confetti from 'canvas-confetti';

import "swiper/css";
import "swiper/css/autoplay";
import "swiper/css/pagination";
import "./ultra-kawaii.css";
import './App.css';

import Lunara from './assets/Lunara.jpg';
import foto1 from './assets/Dormindo igual rampa.jpg';
import foto2 from './assets/Privacidade Zero.jpg';
import caixa from './assets/caixa.jpg';
import gatoCururu from './assets/gato cururu.jpg';
import lunaraMajestosa from './assets/Lunara.jpg';
import mesa from './assets/mesa.jpg';
import miniLunara2 from './assets/mini lunara 2.jpg';
import miniLunara from './assets/mini lunara.jpg';
import posicaoEstranha from './assets/posi√ß√£o estranha.jpg';
import vet from './assets/vet.jpg';
import pawImg from './assets/paw.png';
import miadoSom from './assets/miado.wav';

import KawaiiElements from './KawaiiElements';

const catPhotos = [
    {
        src: foto1,
        caption: "Todos julgam minha pose de dormir, mas eu acho confort√°vel!",
    },
    {
        src: foto2,
        caption: "Sinceramente, eu n√£o concordo com a utiliza√ß√£o dessa foto...",
    },
    {
        src: caixa,
        caption: "As compras chegaram? Beleza, a caixa agora √© minha cama oficial.",
    },
    {
        src: gatoCururu,
        caption: "Chamaram de posi√ß√£o estranha‚Ä¶ eu chamo de ioga felina avan√ßada.",
    },
    {
        src: lunaraMajestosa,
        caption: "Sim, eu sou majestosa. Sim, voc√™ pode me adorar √† vontade.",
    },
    {
        src: mesa,
        caption: "Eles n√£o entendem que essa mesa na verdade √© minha.",
    },
    {
        src: miniLunara2,
        caption: "Pequena no tamanho, gigante no charme. J√° nasci diva.",
    },
    {
        src: miniLunara,
        caption: "Primeiro soninho registrado‚Ä¶ treino pesado pro t√≠tulo de Mestre em Cochilos.",
    },
    {
        src: posicaoEstranha,
        caption: "Equilibrar-se em lugares improv√°veis √© uma arte. Poucos entendem.",
    },
    {
        src: vet,
        caption: "Colocaram coleira e me levaram ao vet‚Ä¶ mas continuo plena e estilosa.",
    },
];

const skills = [
    {
        title: "Mestre em amassar p√£o",
        icon: "üçû",
        description: "Especialidade em amassar superf√≠cies macias com as patinhas por at√© 20 minutos seguidos. Essa t√©cnica relaxante √© resultado de anos de pr√°tica e aperfei√ßoamento. A press√£o aplicada e o ritmo s√£o perfeitamente calibrados para proporcionar m√°ximo conforto √† Lunara, al√©m de mostrar afeto aos humanos. Certificada pelo Instituto Felino de Massagens."
    },
    {
        title: "Especialista em cochilos",
        icon: "üò¥",
        description: "Capacidade de dormir em m√©dia 16 horas por dia, adaptando-se a qualquer superf√≠cie e posi√ß√£o. Especializada em encontrar o local mais inconveniente para os humanos e transform√°-lo em uma cama perfeita. Detentora do recorde de 5 posi√ß√µes diferentes de dormir em um √∫nico cochilo. Mestra em ronronar enquanto dorme."
    },
    {
        title: "Ca√ßadora de luzinhas",
        icon: "üî¶",
        description: "Reflexos sobre-felinos que permitem rastrear e capturar pontos luminosos com precis√£o milim√©trica. Pr√°tica di√°ria de persegui√ß√£o a lasers e reflexos de celular. Consegue detectar o menor movimento de luz em um raio de 10 metros, mesmo quando est√° aparentemente dormindo. T√°ticas avan√ßadas incluem saltos acrob√°ticos e derrapagens controladas."
    },
    {
        title: "Influencer de miados",
        icon: "üé§",
        description: "Comunicadora nata com mais de 27 varia√ß√µes sonoras de miados, cada um com prop√≥sito espec√≠fico. Especialista em acordar humanos √†s 5h da manh√£ com miados melodiosos. Voz potente que atravessa paredes. Treinada para maximizar o volume do miado em propor√ß√£o inversa √† urg√™ncia da necessidade."
    },
    {
        title: "Sommelier de sach√™s",
        icon: "ü•´",
        description: "Paladar refinado capaz de distinguir mais de 50 sabores diferentes de ra√ß√£o √∫mida. Habilidade incr√≠vel de recusar comida quando n√£o est√° no ponto ideal de temperatura e textura. Especialista em convencer humanos a abrir m√∫ltiplos sach√™s at√© encontrar o preferido do dia. Cr√≠tica gastron√¥mica severa mas justa."
    },
    {
        title: "Alpinista de prateleiras",
        icon: "üßó",
        description: "Capacidade de escalar qualquer superf√≠cie vertical, desafiando a gravidade com garras e determina√ß√£o. T√©cnica impec√°vel para alcan√ßar os lugares mais altos e inacess√≠veis da casa. Especialista em derrubar objetos estrat√©gicos para testar a velocidade de rea√ß√£o dos humanos. Destemor de alturas e obsess√£o por conquistar novos territ√≥rios elevados."
    },
    {
        title: "Guardadora oficial de caixas de papel√£o",
        icon: "üì¶",
        description: "Talento natural para identificar a caixa mais valiosa da casa e reivindic√°-la como territ√≥rio pessoal. T√©cnicas avan√ßadas de amassar, arranhar e moldar papel√£o para criar o ninho perfeito. Capaz de entrar em caixas aparentemente pequenas demais, demonstrando que gatos s√£o, na verdade, l√≠quidos. Defensora ferrenha de sua cole√ß√£o de caixas."
    },
    {
        title: "Fiscal de sacolas",
        icon: "üõçÔ∏è",
        description: "Inspe√ß√£o minuciosa de todas as sacolas que entram em casa, garantindo que nada escape ao seu controle de qualidade. Velocidade impressionante para mergulhar dentro de qualquer sacola rec√©m-chegada. Faro excepcional para localizar sacolas com potencial para virar brinquedos. Especialista em produzir sons crepitantes durante inspe√ß√µes noturnas."
    },
    {
        title: "Ninja do modo furtivo √†s 6 da manh√£",
        icon: "ü•∑",
        description: "Mestra em movimentos silenciosos seguidos de caos repentino no hor√°rio mais inconveniente para os humanos. T√©cnica avan√ßada de pular na cama sem fazer barulho, para ent√£o aterrissar precisamente no est√¥mago do dono adormecido. Especialidade em derrubar objetos estrat√©gicos para criar a maior reverbera√ß√£o ac√∫stica poss√≠vel."
    },
    {
        title: "Detetive de cheiros misteriosos",
        icon: "üïµÔ∏è‚Äç‚ôÇÔ∏è",
        description: "Capacidade olfativa superior, capaz de detectar um petisco a 20 metros de dist√¢ncia atrav√©s de paredes. An√°lise forense completa de todos os cheiros novos na casa, com documenta√ß√£o atrav√©s de esfrega√ß√µes de focinho. Treinamento intensivo em identificar o local exato onde caiu aquela migalha de atum h√° tr√™s dias."
    },
    {
        title: "Decoradora da cadeira da mam√£e (com garras inclusas)",
        icon: "ü™ë",
        description: "Artista t√™xtil especializada em criar padr√µes √∫nicos e irrevers√≠veis em m√≥veis estofados. T√©cnica refinada de perfura√ß√£o precisa que destr√≥i apenas os tecidos mais caros da casa. Prefer√™ncia por materiais importados e antiguidades familiares. Cada pe√ßa √© assinada com pelos aut√™nticos que nunca saem, mesmo ap√≥s m√∫ltiplas lavagens."
    },
    {
        title: "Atleta ol√≠mpica de corridas aleat√≥rias",
        icon: "üèÉ",
        description: "Especialista em sprints de alta velocidade sem motivo aparente, geralmente √†s 3 da manh√£. Recordista em derrapagens em pisos lisos e ader√™ncia em curvas fechadas. Capaz de atingir velocidades superiores a 30km/h em curtos espa√ßos, especialmente quando ouve o barulho de um sach√™ sendo aberto a dist√¢ncia."
    },
    {
        title: "Modelo profissional de poses estranhas",
        icon: "üì∏",
        description: "Flexibilidade sobre-felina que permite contor√ß√µes imposs√≠veis para outros mam√≠feros. Portfolio extenso de poses que desafiam as leis da f√≠sica e da anatomia convencional. Especialista em posturas que oscilam entre o extremamente fofo e o moderadamente perturbador. Sempre pronta para uma sess√£o fotogr√°fica, desde que seja ideia dela."
    },
    {
        title: "Terapeuta de ronronadas",
        icon: "üßò‚Äç‚ôÄÔ∏è",
        description: "Produ√ß√£o de vibra√ß√µes sonoras na frequ√™ncia exata para reduzir o estresse e ansiedade humana. Sess√µes de terapia dispon√≠veis mediante abertura de sach√™s. Capacidade de iniciar o ronronar instantaneamente ao perceber tristeza em seu humano. A intensidade do ronronar √© proporcional ao conforto oferecido ou √† proximidade da hora da comida."
    },
    {
        title: "Especialista em ficar no caminho (principalmente na hora de andar)",
        icon: "üö∂‚Äç‚ôÇÔ∏è",
        description: "Habilidade sobrenatural de prever e ocupar exatamente o espa√ßo por onde o humano precisar√° passar nos pr√≥ximos segundos. Dom√≠nio avan√ßado da t√©cnica de entrela√ßamento entre pernas humanas durante deslocamentos, com risco calculado de trope√ßos. Prefer√™ncia especial por corredores, escadas e portas de banheiro em momentos de urg√™ncia."
    },
    {
        title: "Mestre do olhar julgador",
        icon: "üòº",
        description: "Express√£o facial capaz de transmitir desaprova√ß√£o total com m√≠nimo esfor√ßo. Olhar penetrante que faz humanos questionarem todas as suas escolhas de vida. Especialidade em fixar o olhar exatamente no momento em que o dono comete algum deslize ou gafe. O famoso 'olhar de desprezo felino' √© marca registrada e foi aperfei√ßoado atrav√©s de gera√ß√µes."
    },
];

export default function CatPortfolio() {
    const miadoAudio = new Audio(miadoSom);
    const playMiado = () => {
        miadoAudio.currentTime = 0;
        miadoAudio.volume = 0.1;
        miadoAudio.play().catch(error => {
            console.log("N√£o foi poss√≠vel reproduzir o miado:", error);
        });
    };
    
    const [nome, setNome] = useState("");
    const [mensagem, setMensagem] = useState("");
    const [showMain, setShowMain] = useState(true);
    const [selectedSkill, setSelectedSkill] = useState(null);
    const [catMode, setCatMode] = useState(false);
    const [kawaiiMode, setKawaiiMode] = useState(false);
    // Estado para controlar quais se√ß√µes t√©cnicas est√£o expandidas
    const [techSections, setTechSections] = useState({
        react: false,
        animations: false,
        styling: false,
        interactivity: false
    });
    const swiperRef = React.useRef(null);

    useEffect(() => {
        document.body.style.overflow = showMain ? "hidden" : "";
        return () => { document.body.style.overflow = ""; };
    }, [showMain]);

    const TEXT_ACCENT = "#FF6B99";
    const BG_ACCENT_HEX = "#FF6B99";
    const BG_ACCENT_RGB = "252,194,193";

    const handleWhatsApp = (e) => {
        e.preventDefault();
        playMiado();
        const numero = "5511968690036";
        const texto = `Ol√°! Meu nome √© ${nome}.\n${mensagem}`;
        const url = `https://wa.me/${numero}?text=${encodeURIComponent(texto)}`;
        window.open(url, "_blank");
    };

    const handleShowRest = () => {
        playMiado();
        setShowMain(false);
        setTimeout(() => {
            window.scrollTo({ top: 0, behavior: "auto" });
        }, 100);
    };

    const scrollToSection = (e, sectionId) => {
        e.preventDefault();
        playMiado();
        const header = document.querySelector('header.sticky');
        const section = document.getElementById(sectionId);
        if (section) {
            const headerHeight = header ? header.offsetHeight : 0;
            const sectionTop = section.getBoundingClientRect().top + window.scrollY;
            window.scrollTo({
                top: sectionTop - headerHeight - 8,
                behavior: 'smooth',
            });
        }
    };
    
    const openSkillModal = (skill) => {
        playMiado();
        setSelectedSkill(skill);
    };
    const closeSkillModal = (withSound = false) => {
        if (withSound) playMiado();
        requestAnimationFrame(() => setSelectedSkill(null));
    };
    
    const translateToCatLanguage = (text) => {
        if (!catMode || !text) return text;
        return text.split(' ').map(word => {
            if (word.trim().length === 0 || /^[.,!?;:"\s]+$/.test(word)) return word;
            const punctuation = word.match(/[.,!?;:"]$/);
            const punc = punctuation ? punctuation[0] : '';
            const cleanWord = punctuation ? word.slice(0, -1) : word;
            let catWord;
            if (cleanWord.length <= 3) catWord = "Miau";
            else if (cleanWord.length <= 6) catWord = "Miau miau";
            else catWord = "Miaaau";
            if (/^[A-Z]/.test(cleanWord)) catWord = catWord.charAt(0).toUpperCase() + catWord.slice(1);
            else catWord = catWord.toLowerCase();
            return catWord + punc;
        }).join(' ');
    };
    
    const toggleCatLanguage = () => {
        playMiado();
        setCatMode(prevMode => !prevMode);
    };
    
    const toggleTechSection = (section) => {
        playMiado();
        setTechSections(prev => ({
            ...prev,
            [section]: !prev[section]
        }));
    };
    
    const toggleKawaiiMode = () => {
        playMiado();
        setKawaiiMode(prevMode => !prevMode);
        if (!kawaiiMode) {
            confetti({
                particleCount: 150,
                spread: 100,
                origin: { y: 0.6 },
                colors: ['#FF6B99', '#FFD1DC', '#FFA6C9', '#FF85B3'],
                shapes: ['heart']
            });
        }
    };
    return (
        <div
            className={`min-h-screen font-sans text-gray-800 relative flex flex-col items-center justify-center ${kawaiiMode ? 'kawaii-mode' : ''}`}
            style={{
                transition: "background 0.5s ease-in-out",
                background: kawaiiMode 
                    ? `linear-gradient(135deg, rgba(255, 182, 193, 0.3), rgba(255, 105, 180, 0.1))`
                    : `linear-gradient(135deg, rgba(${BG_ACCENT_RGB},0.08), rgba(${BG_ACCENT_RGB},0.03))`
            }}
        >
            {/* Header fixo/sticky para ambos os modos */}
            {(!showMain || kawaiiMode) && (
                <header 
                    className={`${kawaiiMode ? 'fixed' : 'sticky'} top-0 left-0 right-0 z-50 flex items-center justify-between px-8 py-6 shadow-md rounded-b-3xl backdrop-blur mx-auto w-full max-w-6xl`}
                    style={{ 
                        backgroundColor: kawaiiMode ? 'rgba(255, 244, 254, 0.9)' : 'rgba(255, 255, 255, 0.8)',
                        boxShadow: kawaiiMode ? '0 4px 12px rgba(255, 107, 153, 0.15)' : '0 4px 6px rgba(0, 0, 0, 0.1)'
                    }}
                >
                    <motion.h1
                        initial={{ y: -30, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ duration: 0.7 }}
                        className="text-3xl font-bold tracking-tight"
                        style={{ color: TEXT_ACCENT }}
                    >
                        {translateToCatLanguage("Portf√≥lio da Lunara")}
                    </motion.h1>
                    <nav className="flex items-center">
                        <ul className="flex gap-6 text-lg font-medium mr-8">
                            <li>
                                <a href="#fotos" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'fotos')}>
                                    {translateToCatLanguage("Fotos")}
                                </a>
                            </li>
                            <li>
                                <a href="#skills" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'skills')}>
                                    {translateToCatLanguage("Skills")}
                                </a>
                            </li>
                            <li>
                                <a href="#tech-details" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'tech-details')}>
                                    {translateToCatLanguage("C√≥digo")}
                                </a>
                            </li>
                            <li>
                                <a href="#contato" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'contato')}>
                                    {translateToCatLanguage("Contato")}
                                </a>
                            </li>
                        </ul>
                        <div className="flex gap-3">
                            <button
                                onClick={toggleCatLanguage}
                                className="relative flex items-center justify-center bg-white/80 border rounded-full p-3.5 transition-all hover:bg-pink-50 transform hover:scale-105"
                                style={{ 
                                    border: `2px solid ${TEXT_ACCENT}`,
                                    color: TEXT_ACCENT,
                                    boxShadow: catMode ? `0 0 10px ${TEXT_ACCENT}` : 'none',
                                    width: '48px',
                                    height: '48px',
                                    minWidth: '48px'
                                }}
                                title={catMode ? "Voltar para portugu√™s" : "Traduzir para gat√™s"}
                            >
                                {catMode ? (
                                    <div style={{
                                        position: 'absolute',
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                        display: 'flex',
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                        fontSize: '1.32rem',
                                        paddingBottom: '1px'
                                    }}>
                                        <span>üáßüá∑</span>
                                    </div>
                                ) : (
                                    <div style={{
                                        position: 'absolute',
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                        display: 'flex',
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                        fontSize: '1.5rem'
                                    }}>
                                        <span>üê±</span>
                                    </div>
                                )}
                            </button>
                            <motion.button
                                onClick={toggleKawaiiMode}
                                className={`relative flex items-center justify-center ${kawaiiMode ? "bg-pink-300" : "bg-white/80"} border rounded-full p-3.5 transition-all hover:bg-pink-50 transform hover:scale-105 kawaii-button`}
                                style={{ 
                                    border: `2px solid #FF6B99`,
                                    boxShadow: kawaiiMode ? `0 0 15px #FF6B99` : 'none',
                                    width: '48px',
                                    height: '48px',
                                    minWidth: '48px'
                                }}
                                title={kawaiiMode ? "Desativar modo ultra fofo" : "Ativar modo ultra fofo"}
                                animate={{ 
                                    scale: kawaiiMode ? [1, 1.2, 1] : 1
                                }}
                                transition={{ 
                                    repeat: kawaiiMode ? Infinity : 0, 
                                    duration: 1.5 
                                }}
                            >
                                <div style={{
                                    position: 'absolute',
                                    top: 0,
                                    left: 0,
                                    right: 0,
                                    bottom: 0,
                                    display: 'flex',
                                    justifyContent: 'center',
                                    alignItems: 'center',
                                    fontSize: '1.5rem'
                                }}>
                                    <span>üíñ</span>
                                </div>
                            </motion.button>
                        </div>
                    </nav>
                </header>
            )}
                
            <div
                className="fixed inset-0 flex items-center justify-center z-20"
                style={{
                    minHeight: "100vh",
                    transition: "opacity 0.4s",
                    opacity: showMain ? 1 : 0,
                    pointerEvents: showMain ? "auto" : "none",
                    background: `linear-gradient(135deg, rgba(${BG_ACCENT_RGB},0.08), rgba(${BG_ACCENT_RGB},0.03))`
                }}
            >
                <motion.section
                    key="main"
                    className="flex flex-col items-center justify-center gap-10 w-full"
                    initial={{ opacity: 1 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    transition={{ duration: 0.4 }}
                    style={{ minHeight: "100vh" }}
                >
                    <motion.img
                        src={Lunara}
                        alt="Foto da gata em destaque"
                        className="w-64 h-64 rounded-full object-cover shadow-lg"
                        style={{ border: `4px solid ${BG_ACCENT_HEX}` }}
                        initial={{ scale: 0.8, opacity: 0 }}
                        animate={{ scale: 1, opacity: 1 }}
                        transition={{ duration: 0.8 }}
                    />
                    <motion.div
                        initial={{ y: 40, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ duration: 0.8, delay: 0.2 }}
                        className="flex flex-col items-center"
                    >
                        <h2 className="text-4xl font-extrabold mb-4 text-center" style={{ color: "#333" }}>
                            {translateToCatLanguage("Ol√°, humano! üêæ")}
                        </h2>
                        <p className="text-xl text-gray-600 max-w-md mb-8 text-center">
                            {translateToCatLanguage("Bem-vindo ao meu portf√≥lio felino. Aqui voc√™ vai conhecer minhas melhores poses, habilidades e como entrar em contato com meu humano. Miaaau!")}
                        </p>
                        <button
                            className="rounded-lg py-3 px-6 font-semibold text-lg transition"
                            onClick={handleShowRest}
                            type="button"
                            style={{ backgroundColor: BG_ACCENT_HEX, color: "#fff" }}
                        >
                            {translateToCatLanguage("Clique aqui para ver minhas habilidades felinas!")}
                        </button>
                    </motion.div>
                </motion.section>
            </div>

            {/* Header fixo/sticky para ambos os modos */}
            {(!showMain || kawaiiMode) && (
                <header 
                    className={`${kawaiiMode ? 'fixed' : 'sticky'} top-0 left-0 right-0 z-50 flex items-center justify-between px-8 py-6 shadow-md rounded-b-3xl backdrop-blur mx-auto w-full max-w-6xl`}
                    style={{ 
                        backgroundColor: kawaiiMode ? 'rgba(255, 244, 254, 0.9)' : 'rgba(255, 255, 255, 0.8)',
                        boxShadow: kawaiiMode ? '0 4px 12px rgba(255, 107, 153, 0.15)' : '0 4px 6px rgba(0, 0, 0, 0.1)'
                    }}
                >
                    <motion.h1
                        initial={{ y: -30, opacity: 0 }}
                        animate={{ y: 0, opacity: 1 }}
                        transition={{ duration: 0.7 }}
                        className="text-3xl font-bold tracking-tight"
                        style={{ color: TEXT_ACCENT }}
                    >
                        {translateToCatLanguage("Portf√≥lio da Lunara")}
                    </motion.h1>
                    <nav className="flex items-center">
                        <ul className="flex gap-6 text-lg font-medium mr-8">
                            <li>
                                <a href="#fotos" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'fotos')}>
                                    {translateToCatLanguage("Fotos")}
                                </a>
                            </li>
                            <li>
                                <a href="#skills" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'skills')}>
                                    {translateToCatLanguage("Skills")}
                                </a>
                            </li>
                            <li>
                                <a href="#tech-details" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'tech-details')}>
                                    {translateToCatLanguage("C√≥digo")}
                                </a>
                            </li>
                            <li>
                                <a href="#contato" className="transition" style={{ color: "#FF6B99" }} onClick={e => scrollToSection(e, 'contato')}>
                                    {translateToCatLanguage("Contato")}
                                </a>
                            </li>
                        </ul>
                        <div className="flex gap-3">
                            <button
                                onClick={toggleCatLanguage}
                                className="relative flex items-center justify-center bg-white/80 border rounded-full p-3.5 transition-all hover:bg-pink-50 transform hover:scale-105"
                                style={{ 
                                    border: `2px solid ${TEXT_ACCENT}`,
                                    color: TEXT_ACCENT,
                                    boxShadow: catMode ? `0 0 10px ${TEXT_ACCENT}` : 'none',
                                    width: '48px',
                                    height: '48px',
                                    minWidth: '48px'
                                }}
                                title={catMode ? "Voltar para portugu√™s" : "Traduzir para gat√™s"}
                            >
                                {catMode ? (
                                    <div style={{
                                        position: 'absolute',
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                        display: 'flex',
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                        fontSize: '1.32rem',
                                        paddingBottom: '1px'
                                    }}>
                                        <span>üáßüá∑</span>
                                    </div>
                                ) : (
                                    <div style={{
                                        position: 'absolute',
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                        display: 'flex',
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                        fontSize: '1.5rem'
                                    }}>
                                        <span>üê±</span>
                                    </div>
                                )}
                            </button>
                            <motion.button
                                onClick={toggleKawaiiMode}
                                className={`relative flex items-center justify-center ${kawaiiMode ? "bg-pink-300" : "bg-white/80"} border rounded-full p-3.5 transition-all hover:bg-pink-50 transform hover:scale-105 kawaii-button`}
                                style={{ 
                                    border: `2px solid #FF6B99`,
                                    boxShadow: kawaiiMode ? `0 0 15px #FF6B99` : 'none',
                                    width: '48px',
                                    height: '48px',
                                    minWidth: '48px'
                                }}
                                title={kawaiiMode ? "Desativar modo ultra fofo" : "Ativar modo ultra fofo"}
                                animate={{ 
                                    scale: kawaiiMode ? [1, 1.2, 1] : 1
                                }}
                                transition={{ 
                                    repeat: kawaiiMode ? Infinity : 0, 
                                    duration: 1.5 
                                }}
                            >
                                <div style={{
                                    position: 'absolute',
                                    top: 0,
                                    left: 0,
                                    right: 0,
                                    bottom: 0,
                                    display: 'flex',
                                    justifyContent: 'center',
                                    alignItems: 'center',
                                    fontSize: '1.5rem'
                                }}>
                                    <span>üíñ</span>
                                </div>
                            </motion.button>
                        </div>
                    </nav>
                </header>
            )}

            <div
                className={`relative z-10 transition-opacity duration-400 flex flex-col items-center justify-center w-full ${showMain && !kawaiiMode ? "opacity-0 pointer-events-none" : "opacity-100"}`}
                style={{ 
                    marginTop: kawaiiMode ? '90px' : '0'
                }}
            >
                <section id="fotos" className="px-8 pt-10 pb-16 flex flex-col items-center justify-center w-full min-h-[60vh]">
                    <motion.h1
                            initial={{ y: -30, opacity: 0 }}
                            animate={{ y: 0, opacity: 1 }}
                            transition={{ duration: 0.7 }}
                            className="text-3xl font-bold tracking-tight"
                            style={{ color: TEXT_ACCENT }}
                        >
                            {translateToCatLanguage("Portf√≥lio da Lunara")}
                        </motion.h1>
                        <nav className="flex items-center">
                            <ul className="flex gap-6 text-lg font-medium mr-8">
                                <li>
                                    <a
                                        href="#fotos"
                                        className="transition"
                                        style={{ color: "#FF6B99" }}
                                        onClick={e => scrollToSection(e, 'fotos')}
                                    >
                                        {translateToCatLanguage("Fotos")}
                                    </a>
                                </li>
                                <li>
                                    <a
                                        href="#skills"
                                        className="transition"
                                        style={{ color: "#FF6B99" }}
                                        onClick={e => scrollToSection(e, 'skills')}
                                    >
                                        {translateToCatLanguage("Skills")}
                                    </a>
                                </li>
                                <li>
                                    <a
                                        href="#tech-details"
                                        className="transition"
                                        style={{ color: "#FF6B99" }}
                                        onClick={e => scrollToSection(e, 'tech-details')}
                                    >
                                        {translateToCatLanguage("C√≥digo")}
                                    </a>
                                </li>
                                <li>
                                    <a
                                        href="#contato"
                                        className="transition"
                                        style={{ color: "#FF6B99" }}
                                        onClick={e => scrollToSection(e, 'contato')}
                                    >
                                        {translateToCatLanguage("Contato")}
                                    </a>
                                </li>
                            </ul>
                            <div className="flex gap-3">
                                <button
                                    onClick={toggleCatLanguage}
                                    className="relative flex items-center justify-center bg-white/80 border rounded-full p-3.5 transition-all hover:bg-pink-50 transform hover:scale-105"
                                    style={{ 
                                        border: `2px solid ${TEXT_ACCENT}`,
                                        color: TEXT_ACCENT,
                                        boxShadow: catMode ? `0 0 10px ${TEXT_ACCENT}` : 'none',
                                        width: '48px',
                                        height: '48px',
                                        minWidth: '48px'
                                    }}
                                    title={catMode ? "Voltar para portugu√™s" : "Traduzir para gat√™s"}
                                >
                                {catMode ? (
                                    <div style={{
                                        position: 'absolute',
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                        display: 'flex',
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                        fontSize: '1.32rem',
                                        paddingBottom: '1px'
                                    }}>
                                        <span>üáßüá∑</span>
                                    </div>
                                ) : (
                                    <div style={{
                                        position: 'absolute',
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                        display: 'flex',
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                        fontSize: '1.5rem'
                                    }}>
                                        <span>üê±</span>
                                    </div>
                                )}
                                </button>
                                
                                <motion.button
                                    onClick={toggleKawaiiMode}
                                    className={`relative flex items-center justify-center ${kawaiiMode ? "bg-pink-300" : "bg-white/80"} border rounded-full p-3.5 transition-all hover:bg-pink-50 transform hover:scale-105 kawaii-button`}
                                    style={{ 
                                        border: `2px solid #FF6B99`,
                                        boxShadow: kawaiiMode ? `0 0 15px #FF6B99` : 'none',
                                        width: '48px',
                                        height: '48px',
                                        minWidth: '48px'
                                    }}
                                    title="Ativar modo ultra fofo"
                                    animate={{ 
                                        scale: kawaiiMode ? [1, 1.2, 1] : 1
                                    }}
                                    transition={{ 
                                        repeat: kawaiiMode ? Infinity : 0, 
                                        duration: 1.5 
                                    }}
                                >
                                    <div style={{
                                        position: 'absolute',
                                        top: 0,
                                        left: 0,
                                        right: 0,
                                        bottom: 0,
                                        display: 'flex',
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                        fontSize: '1.5rem'
                                    }}>
                                        <span>üíñ</span>
                                    </div>
                                </motion.button>
                            </div>
                        </nav>
                </header>
            )}

                <section id="fotos" className="px-8 pt-10 pb-16 flex flex-col items-center justify-center w-full min-h-[60vh]">
                    <motion.h3
                        className="text-2xl font-bold mb-6 text-center w-full flex justify-center"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: showMain ? 0 : 1, y: showMain ? 20 : 0 }}
                        transition={{ duration: 0.6 }}
                        style={{ color: TEXT_ACCENT }} // manter
                    >
                        {translateToCatLanguage("Minhas Fotos Favoritas")}
                    </motion.h3>
                        <div className="relative w-full max-w-5xl mx-auto">
                        {!showMain && (
                            <>
                                <div
                                    className="absolute top-0 left-0 h-full"
                                    style={{
                                        width: "60px",
                                        zIndex: 20,
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "flex-start",
                                        borderTopLeftRadius: "1rem",
                                        borderBottomLeftRadius: "1rem",
                                        background: "transparent",
                                        transition: "background 0.18s ease"
                                    }}
                                    onClick={() => {
                                        playMiado();
                                        swiperRef.current?.swiper.slidePrev();
                                    }}
                                    onMouseEnter={e => e.currentTarget.style.background = `rgba(${BG_ACCENT_RGB},0.10)`}
                                    onMouseLeave={e => e.currentTarget.style.background = "transparent"}
                                >
                                    <img
                                        src={pawImg}
                                        alt="Patinha anterior"
                                        className="ml-2 w-10 h-10 object-contain transform -rotate-90"
                                        style={{ WebkitUserDrag: "none" }}
                                        draggable={false}
                                    />
                                    </div>
                                    <div
                                    className="absolute top-0 right-0 h-full"
                                    style={{
                                        width: "60px",
                                        zIndex: 20,
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "flex-end",
                                        borderTopRightRadius: "1rem",
                                        borderBottomRightRadius: "1rem",
                                        background: "transparent",
                                        transition: "background 0.18s ease"
                                    }}
                                    onClick={() => {
                                        playMiado();
                                        swiperRef.current?.swiper.slideNext();
                                    }}
                                    onMouseEnter={e => e.currentTarget.style.background = `rgba(${BG_ACCENT_RGB},0.10)`}
                                    onMouseLeave={e => e.currentTarget.style.background = "transparent"}
                                >
                                    <img
                                        src={pawImg}
                                        alt="Patinha pr√≥xima"
                                        className="mr-2 w-10 h-10 object-contain transform rotate-90"
                                        style={{ WebkitUserDrag: "none" }}
                                        draggable={false}
                                    />
                                    </div>
                            </>
                        )}
                         <Swiper
                             ref={swiperRef}
                             modules={[Pagination, Autoplay]}
                             pagination={{ clickable: true }}
                             autoplay={{ delay: 5000, disableOnInteraction: false }}
                             spaceBetween={30}
                             slidesPerView={1}
                             loop={true}
                             className="max-w-5xl w-full mx-auto"
                         >
                            {catPhotos.map((photo, idx) => (
                                <SwiperSlide key={idx}>
                                    <motion.div
                                        className="bg-white rounded-2xl shadow-lg p-8 flex flex-col items-center w-full"
                                        initial={false}
                                        animate={{ opacity: showMain ? 0 : 1 }}
                                    >
                                        <div className="relative w-[600px] h-[600px] mb-4 flex items-center justify-center">
                                            <motion.img
                                                src={photo.src}
                                                alt={photo.caption}
                                                className="max-w-full max-h-full rounded-xl bg-white object-center"
                                                style={{ border: `3px solid ${BG_ACCENT_HEX}` }}
                                                whileHover={{ scale: 1.03 }}
                                                transition={{ type: "spring", stiffness: 400 }}
                                            />
                                        </div>
                                        <p className="text-center text-gray-700 italic" style={{ color: "#5b5b5b" }}>{translateToCatLanguage(photo.caption)}</p>
                                    </motion.div>
                                </SwiperSlide>
                            ))}
                        </Swiper>
                    </div>
                </section>

                <section
                    id="skills"
                    className="px-8 py-12 rounded-3xl mx-4 my-32 flex flex-col items-center w-full"
                    style={{ marginTop: "8rem", background: "rgba(255,255,255,0.6)" }}
                >
                    <motion.h3
                        className="text-2xl font-bold mb-8 text-center"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: showMain ? 0 : 1, y: showMain ? 20 : 0 }}
                        transition={{ duration: 0.6 }}
                        style={{ color: TEXT_ACCENT }}
                    >
                        {translateToCatLanguage("Minhas Skills Felinas")}
                    </motion.h3>
                    <motion.p
                        className="text-sm mb-6 text-center font-medium"
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: showMain ? 0 : 1, y: showMain ? 10 : 0 }}
                        transition={{ duration: 0.6, delay: 0.2 }}
                        style={{ color: "#FF6B99" }}
                    >
                        ‚ú® {translateToCatLanguage("Clique em uma habilidade para saber mais")} ‚ú®
                    </motion.p>
                    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6 max-w-4xl mx-auto" style={{ gridAutoRows: "1fr" }}>
                        {skills.map((skill, idx) => (
                            <motion.div
                                key={idx}
                                className="rounded-xl p-6 flex flex-col items-center justify-center shadow-md cursor-pointer relative overflow-hidden h-full"
                                style={{ 
                                    background: `rgba(${BG_ACCENT_RGB},0.12)`,
                                    aspectRatio: '1/1',
                                    minHeight: '180px',
                                    width: '100%',
                                    display: 'flex',
                                    flexDirection: 'column',
                                    justifyContent: 'center',
                                    alignItems: 'center'
                                }}
                                whileHover={{ 
                                    scale: 1.03,
                                    boxShadow: `0 4px 12px rgba(${BG_ACCENT_RGB},0.3)`
                                }}
                                transition={{ type: "spring", stiffness: 400 }}
                                onClick={() => openSkillModal(skill)}
                                title={`Clique para saber mais sobre ${skill.title}`}
                            >
                                <div className="absolute bottom-2 right-2 opacity-60 text-xs" style={{ pointerEvents: 'none' }}>
                                    üëÜ
                                </div>
                                <div className="flex flex-col items-center h-full w-full" style={{ padding: '10px 0' }}>
                                    <div className="flex-1"></div>
                                    <div className="flex flex-col items-center">
                                        <span className="text-4xl mb-4">{skill.icon}</span>
                                        <span className="text-lg font-semibold text-center w-full" style={{ color: TEXT_ACCENT }}>{translateToCatLanguage(skill.title)}</span>
                                    </div>
                                    <div className="flex-1"></div>
                                </div>
                            </motion.div>
                        ))}
                    </div>
                </section>

                <section id="tech-details" className="px-8 py-12 flex flex-col items-center w-full">
                    <motion.h3
                        className="text-2xl font-bold mb-6 text-center"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: showMain ? 0 : 1, y: showMain ? 20 : 0 }}
                        transition={{ duration: 0.6 }}
                        style={{ color: TEXT_ACCENT }}
                    >
                        {translateToCatLanguage("Os Segredos T√©cnicos")}
                    </motion.h3>
                    
                    <div className="max-w-4xl mx-auto w-full">
                        <motion.div
                            className="bg-white rounded-2xl shadow-lg p-8 mb-8"
                            initial={{ opacity: 0, y: 30 }}
                            animate={{ opacity: showMain ? 0 : 1, y: showMain ? 30 : 0 }}
                            transition={{ duration: 0.7 }}
                        >
                            <div 
                                className="flex justify-between items-center cursor-pointer"
                                onClick={() => toggleTechSection('react')}
                            >
                                <h4 className="text-2xl font-semibold" style={{ color: TEXT_ACCENT }}>
                                    {translateToCatLanguage("React e Hooks")}
                                </h4>
                                <motion.button
                                    className="rounded-full w-12 h-12 flex items-center justify-center text-white"
                                    whileHover={{ scale: 1.05 }}
                                    whileTap={{ scale: 0.95 }}
                                    style={{ backgroundColor: TEXT_ACCENT }}
                                >
                                    {techSections.react ? 'üôÄ' : 'üê±'}
                                </motion.button>
                            </div>
                            
                            <AnimatePresence>
                                {techSections.react && (
                                    <motion.div 
                                        className="overflow-hidden"
                                        initial={{ height: "42px" }}  // Altura suficiente para a barra rosa
                                        animate={{ height: "auto" }}
                                        exit={{ height: "42px" }}
                                        transition={{ 
                                            height: { duration: 0.6, ease: "easeInOut" },
                                        }}
                                    >
                                        {/* Horizontal bar animation with loading effect */}
                                        <motion.div 
                                            className="h-2 mt-6 w-full"
                                            initial={{ opacity: 1 }}
                                            exit={{ opacity: 1 }}
                                        >
                                            <motion.div 
                                                className="h-full rounded-full"
                                                style={{ backgroundColor: TEXT_ACCENT }}
                                                initial={{ width: "0%" }}
                                                animate={{ width: ["0%", "30%", "70%", "100%"] }}
                                                exit={{ width: ["100%", "70%", "30%", "0%"] }}
                                                transition={{ 
                                                    duration: 0.5, 
                                                    times: [0, 0.3, 0.6, 1],
                                                    ease: "easeInOut" 
                                                }}
                                            />
                                        </motion.div>
                                        
                                        {/* Content that grows vertically after */}
                                        <motion.div
                                            initial={{ opacity: 0 }}
                                            animate={{ opacity: 1 }}
                                            exit={{ opacity: 0 }}
                                            transition={{ 
                                                opacity: { delay: 0.2, duration: 0.4, ease: "easeInOut" }
                                            }}
                                            style={{ overflow: "hidden" }}
                                        >
                                            <div className="pt-6">
                                                <p className="mb-5 text-gray-700">
                                                    Este site foi constru√≠do com React.js, utilizando hooks como useState e useEffect para gerenciar estados e efeitos colaterais. 
                                                    Por exemplo, o modo kawaii √© controlado atrav√©s de um estado que, quando ativado, 
                                                    aplica estilos diferenciados e renderiza elementos animados adicionais.
                                                </p>
                                                <pre className="bg-gray-100 p-3 rounded-lg text-sm overflow-auto mb-1">
                                                    <code>{`const [kawaiiMode, setKawaiiMode] = useState(false);

// Quando o modo kawaii √© ativado
const toggleKawaiiMode = () => {
    setKawaiiMode(!kawaiiMode);
    playSound('meow');
};`}</code>
                                                </pre>
                                            </div>
                                        </motion.div>
                                    </motion.div>
                                )}
                            </AnimatePresence>
                        </motion.div>

                        <motion.div
                            className="bg-white rounded-2xl shadow-lg p-8 mb-8"
                            initial={{ opacity: 0, y: 30 }}
                            animate={{ opacity: showMain ? 0 : 1, y: showMain ? 30 : 0 }}
                            transition={{ duration: 0.7, delay: 0.1 }}
                        >
                            <div 
                                className="flex justify-between items-center cursor-pointer"
                                onClick={() => toggleTechSection('animations')}
                            >
                                <h4 className="text-2xl font-semibold" style={{ color: TEXT_ACCENT }}>
                                    {translateToCatLanguage("Anima√ß√µes com Framer Motion")}
                                </h4>
                                <motion.button
                                    className="rounded-full w-12 h-12 flex items-center justify-center text-white"
                                    whileHover={{ scale: 1.05 }}
                                    whileTap={{ scale: 0.95 }}
                                    style={{ backgroundColor: TEXT_ACCENT }}
                                >
                                    {techSections.animations ? 'üôÄ' : 'üê±'}
                                </motion.button>
                            </div>
                            
                            <AnimatePresence>
                                {techSections.animations && (
                                    <motion.div 
                                        className="overflow-hidden"
                                        initial={{ height: "42px" }}  // Altura suficiente para a barra rosa
                                        animate={{ height: "auto" }}
                                        exit={{ height: "42px" }}
                                        transition={{ 
                                            height: { duration: 0.6, ease: "easeInOut" },
                                        }}
                                    >
                                        {/* Horizontal bar animation with loading effect */}
                                        <motion.div 
                                            className="h-2 mt-6 w-full"
                                            initial={{ opacity: 1 }}
                                            exit={{ opacity: 1 }}
                                        >
                                            <motion.div 
                                                className="h-full rounded-full"
                                                style={{ backgroundColor: TEXT_ACCENT }}
                                                initial={{ width: "0%" }}
                                                animate={{ width: ["0%", "30%", "70%", "100%"] }}
                                                exit={{ width: ["100%", "70%", "30%", "0%"] }}
                                                transition={{ 
                                                    duration: 0.5, 
                                                    times: [0, 0.3, 0.6, 1],
                                                    ease: "easeInOut" 
                                                }}
                                            />
                                        </motion.div>
                                        
                                        {/* Content that grows vertically after */}
                                        <motion.div
                                            initial={{ opacity: 0 }}
                                            animate={{ opacity: 1 }}
                                            exit={{ opacity: 0 }}
                                            transition={{ 
                                                opacity: { delay: 0.2, duration: 0.4, ease: "easeInOut" }
                                            }}
                                            style={{ overflow: "hidden" }}
                                        >
                                            <div className="pt-6">
                                                <p className="mb-5 text-gray-700">
                                                    As anima√ß√µes suaves que voc√™ v√™ no site s√£o implementadas usando a biblioteca Framer Motion,
                                                    que oferece um sistema declarativo de anima√ß√µes para React. 
                                                    Cada elemento animado √© envolvido em um componente motion que define seu comportamento animado.
                                                </p>
                                                <pre className="bg-gray-100 p-3 rounded-lg text-sm overflow-auto mb-1">
                                                    <code>{`<motion.div
    initial={{ opacity: 0, scale: 0.8 }}
    animate={{ opacity: 1, scale: 1 }}
    transition={{ duration: 0.5 }}
    whileHover={{ scale: 1.05 }}
>
    // Conte√∫do animado
</motion.div>`}</code>
                                                </pre>
                                            </div>
                                        </motion.div>
                                    </motion.div>
                                )}
                            </AnimatePresence>
                        </motion.div>

                        <motion.div
                            className="bg-white rounded-2xl shadow-lg p-8 mb-8"
                            initial={{ opacity: 0, y: 30 }}
                            animate={{ opacity: showMain ? 0 : 1, y: showMain ? 30 : 0 }}
                            transition={{ duration: 0.7, delay: 0.2 }}
                        >
                            <div 
                                className="flex justify-between items-center cursor-pointer"
                                onClick={() => toggleTechSection('styling')}
                            >
                                <h4 className="text-2xl font-semibold" style={{ color: TEXT_ACCENT }}>
                                    {translateToCatLanguage("Estiliza√ß√£o com Tailwind CSS")}
                                </h4>
                                <motion.button
                                    className="rounded-full w-12 h-12 flex items-center justify-center text-white"
                                    whileHover={{ scale: 1.05 }}
                                    whileTap={{ scale: 0.95 }}
                                    style={{ backgroundColor: TEXT_ACCENT }}
                                >
                                    {techSections.styling ? 'üôÄ' : 'üê±'}
                                </motion.button>
                            </div>
                            
                            <AnimatePresence>
                                {techSections.styling && (
                                    <motion.div 
                                        className="overflow-hidden"
                                        initial={{ height: "42px" }}  // Altura suficiente para a barra rosa
                                        animate={{ height: "auto" }}
                                        exit={{ height: "42px" }}
                                        transition={{ 
                                            height: { duration: 0.6, ease: "easeInOut" },
                                        }}
                                    >
                                        {/* Horizontal bar animation with loading effect */}
                                        <motion.div 
                                            className="h-2 mt-6 w-full"
                                            initial={{ opacity: 1 }}
                                            exit={{ opacity: 1 }}
                                        >
                                            <motion.div 
                                                className="h-full rounded-full"
                                                style={{ backgroundColor: TEXT_ACCENT }}
                                                initial={{ width: "0%" }}
                                                animate={{ width: ["0%", "30%", "70%", "100%"] }}
                                                exit={{ width: ["100%", "70%", "30%", "0%"] }}
                                                transition={{ 
                                                    duration: 0.5, 
                                                    times: [0, 0.3, 0.6, 1],
                                                    ease: "easeInOut" 
                                                }}
                                            />
                                        </motion.div>
                                        
                                        {/* Content that grows vertically after */}
                                        <motion.div
                                            initial={{ opacity: 0 }}
                                            animate={{ opacity: 1 }}
                                            exit={{ opacity: 0 }}
                                            transition={{ 
                                                opacity: { delay: 0.2, duration: 0.4, ease: "easeInOut" }
                                            }}
                                            style={{ overflow: "hidden" }}
                                        >
                                            <div className="pt-6">
                                                <p className="mb-5 text-gray-700">
                                                    A estiliza√ß√£o utiliza Tailwind CSS para classes utilit√°rias, combinada com estilos inline din√¢micos
                                                    baseados no estado do aplicativo. Isso permite alternar facilmente entre os modos normal e kawaii,
                                                    mantendo a consist√™ncia visual em todo o site.
                                                </p>
                                                <pre className="bg-gray-100 p-3 rounded-lg text-sm overflow-auto mb-1">
                                                    <code>{`// Cores din√¢micas baseadas no modo kawaii
const BG_COLOR = kawaiiMode ? '#FFF5F8' : '#FEFCF9';
const TEXT_ACCENT = kawaiiMode ? '#FF6B95' : '#7E5539';

// Aplica√ß√£o de estilos condicionais
<div className={\`container \${kawaiiMode ? 'kawaii-container' : ''}\`}
    style={{ backgroundColor: BG_COLOR }}>
    ...
</div>`}</code>
                                                </pre>
                                            </div>
                                        </motion.div>
                                    </motion.div>
                                )}
                            </AnimatePresence>
                        </motion.div>

                        <motion.div
                            className="bg-white rounded-2xl shadow-lg p-8 mb-8"
                            initial={{ opacity: 0, y: 30 }}
                            animate={{ opacity: showMain ? 0 : 1, y: showMain ? 30 : 0 }}
                            transition={{ duration: 0.7, delay: 0.3 }}
                        >
                            <div 
                                className="flex justify-between items-center cursor-pointer"
                                onClick={() => toggleTechSection('interactivity')}
                            >
                                <h4 className="text-2xl font-semibold" style={{ color: TEXT_ACCENT }}>
                                    {translateToCatLanguage("Interatividade e Efeitos Sonoros")}
                                </h4>
                                <motion.button
                                    className="rounded-full w-12 h-12 flex items-center justify-center text-white"
                                    whileHover={{ scale: 1.05 }}
                                    whileTap={{ scale: 0.95 }}
                                    style={{ backgroundColor: TEXT_ACCENT }}
                                >
                                    {techSections.interactivity ? 'üôÄ' : 'üê±'}
                                </motion.button>
                            </div>
                            
                            <AnimatePresence>
                                {techSections.interactivity && (
                                    <motion.div 
                                        className="overflow-hidden"
                                        initial={{ height: "42px" }}  // Altura suficiente para a barra rosa
                                        animate={{ height: "auto" }}
                                        exit={{ height: "42px" }}
                                        transition={{ 
                                            height: { duration: 0.6, ease: "easeInOut" },
                                        }}
                                    >
                                        {/* Horizontal bar animation with loading effect */}
                                        <motion.div 
                                            className="h-2 mt-6 w-full"
                                            initial={{ opacity: 1 }}
                                            exit={{ opacity: 1 }}
                                        >
                                            <motion.div 
                                                className="h-full rounded-full"
                                                style={{ backgroundColor: TEXT_ACCENT }}
                                                initial={{ width: "0%" }}
                                                animate={{ width: ["0%", "30%", "70%", "100%"] }}
                                                exit={{ width: ["100%", "70%", "30%", "0%"] }}
                                                transition={{ 
                                                    duration: 0.5, 
                                                    times: [0, 0.3, 0.6, 1],
                                                    ease: "easeInOut" 
                                                }}
                                            />
                                        </motion.div>
                                        
                                        {/* Content that grows vertically after */}
                                        <motion.div
                                            initial={{ opacity: 0 }}
                                            animate={{ opacity: 1 }}
                                            exit={{ opacity: 0 }}
                                            transition={{ 
                                                opacity: { delay: 0.2, duration: 0.4, ease: "easeInOut" }
                                            }}
                                            style={{ overflow: "hidden" }}
                                        >
                                            <div className="pt-6">
                                                <p className="mb-5 text-gray-700">
                                                    O site utiliza a Web Audio API para reproduzir efeitos sonoros quando ocorrem intera√ß√µes,
                                                    como o miado ao clicar no bot√£o de modo kawaii. Os elementos interativos possuem 
                                                    feedbacks visuais atrav√©s de anima√ß√µes e mudan√ßas de estado.
                                                </p>
                                                <pre className="bg-gray-100 p-3 rounded-lg text-sm overflow-auto mb-1">
                                                    <code>{`// Fun√ß√£o para reproduzir sons
const playSound = (sound) => {
    if (sound === 'meow') {
        const audio = new Audio(meowSound);
        audio.volume = 0.5;
        audio.play();
    }
};

// Carousel interativo com Swiper
<Swiper
    spaceBetween={20}
    slidesPerView={1}
    navigation
    pagination={{ clickable: true }}
    onSwiper={(swiper) => console.log(swiper)}
>
    {photos.map((photo, index) => (
        <SwiperSlide key={index}>
            <img src={photo} alt="Lunara" className="w-full h-auto rounded-lg" />
        </SwiperSlide>
    ))}
</Swiper>`}</code>
                                                </pre>
                                            </div>
                                        </motion.div>
                                    </motion.div>
                                )}
                            </AnimatePresence>
                        </motion.div>
                    </div>
                </section>

                <section id="contato" className="px-8 py-12 flex flex-col items-center w-full">
                    <motion.h3
                        className="text-2xl font-bold mb-6 text-center"
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: showMain ? 0 : 1, y: showMain ? 20 : 0 }}
                        transition={{ duration: 0.6 }}
                        style={{ color: TEXT_ACCENT }}
                    >
                        {translateToCatLanguage("Fale com meu humano")}
                    </motion.h3>
                    <motion.form
                        onSubmit={handleWhatsApp}
                        className="max-w-md mx-auto bg-white rounded-2xl shadow-lg p-8 flex flex-col gap-4"
                        initial={{ opacity: 0, y: 30 }}
                        animate={{ opacity: showMain ? 0 : 1, y: showMain ? 30 : 0 }}
                        transition={{ duration: 0.7 }}
                    >
                        <label className="font-medium text-gray-700">
                            {translateToCatLanguage("Seu nome")}
                            <input
                                type="text"
                                className="mt-1 w-full rounded-lg px-3 py-2 focus:outline-none"
                                placeholder={translateToCatLanguage("Digite seu nome")}
                                value={nome}
                                onChange={e => setNome(e.target.value)}
                                required
                                style={{ border: `1px solid rgba(${BG_ACCENT_RGB},0.35)` }}
                            />
                        </label>
                        <label className="font-medium text-gray-700">
                            {translateToCatLanguage("Mensagem")}
                            <textarea
                                className="mt-1 w-full rounded-lg px-3 py-2 focus:outline-none"
                                placeholder={translateToCatLanguage("Escreva sua mensagem")}
                                rows={3}
                                value={mensagem}
                                onChange={e => setMensagem(e.target.value)}
                                required
                                style={{ border: `1px solid rgba(${BG_ACCENT_RGB},0.35)` }}
                            />
                        </label>

                        <button
                            type="submit"
                            className="rounded-lg py-2 font-semibold transition"
                            style={{ backgroundColor: TEXT_ACCENT, color: "#fff" }}
                        >
                            {translateToCatLanguage("Enviar Miaus")}
                        </button>
                    </motion.form>
                </section>

                <footer
                    className={`text-center py-6 text-sm w-full transition-colors duration-300 ${kawaiiMode ? 'text-pink-500 font-bold' : 'text-gray-400'}`}
                    style={kawaiiMode ? { color: '#FF1493' } : {}}
                >
                    ¬© {new Date().getFullYear()} {translateToCatLanguage("Portf√≥lio da Lunara. Feito com muito carinho e muitos miados.")}
                </footer>
            </div>
            
            <AnimatePresence mode="wait">
                {selectedSkill && (
                    <motion.div 
                        className="fixed top-0 left-0 w-full h-full flex items-center justify-center z-50"
                        initial={{ opacity: 0 }}
                        animate={{ opacity: 1 }}
                        exit={{ opacity: 0 }}
                        transition={{ duration: 0.15 }}
                    >
                        <div 
                            className="absolute top-0 left-0 w-full h-full bg-black opacity-50"
                            onClick={() => closeSkillModal(false)}
                        ></div>
                        <motion.div 
                            className="bg-white rounded-2xl p-8 max-w-md relative z-10 mx-4"
                            initial={{ scale: 0.9, y: 20 }}
                            animate={{ scale: 1, y: 0 }}
                            exit={{ scale: 0.9, opacity: 0 }}
                            transition={{ type: "tween", duration: 0.15 }}
                            style={{ boxShadow: `0 10px 25px rgba(${BG_ACCENT_RGB},0.4)` }}
                        >
                        <button 
                            className="absolute top-3 right-3 text-gray-500 hover:text-gray-700"
                            onClick={() => closeSkillModal(false)}
                            style={{ cursor: 'pointer' }}
                        >
                            ‚úï
                        </button>
                        <div className="flex items-center mb-4">
                            <span className="text-4xl mr-3">{selectedSkill.icon}</span>
                            <h3 className="text-xl font-bold" style={{ color: TEXT_ACCENT }}>{translateToCatLanguage(selectedSkill.title)}</h3>
                        </div>
                        <p className="text-gray-700">{translateToCatLanguage(selectedSkill.description)}</p>
                        <div className="mt-6 flex justify-center">
                            <button
                                className="rounded-lg px-4 py-2 font-semibold transition"
                                style={{ 
                                    backgroundColor: TEXT_ACCENT, 
                                    color: "#fff",
                                    cursor: 'pointer'
                                }}
                                onClick={() => closeSkillModal(true)}
                            >
                                {translateToCatLanguage("Fechar")}
                            </button>
                        </div>
                    </motion.div>
                </motion.div>
                )}
            </AnimatePresence>
            
            {kawaiiMode && <KawaiiElements isActive={kawaiiMode} />}
        </div>
    );
}
